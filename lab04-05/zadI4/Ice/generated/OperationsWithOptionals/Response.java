//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `zadi4.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package OperationsWithOptionals;

public class Response extends com.zeroc.Ice.Value
{
    public Response()
    {
        this.strResp = "";
        this.enumArg = EEnum.CYAN;
        this.optStrResp = "";
        this.optEnumArg = EEnum.CYAN;
    }

    public Response(String strResp, EEnum enumArg)
    {
        this.strResp = strResp;
        this.enumArg = enumArg;
        this.optStrResp = "";
        this.optEnumArg = EEnum.CYAN;
    }

    public Response(String strResp, EEnum enumArg, String optStrResp, EEnum optEnumArg)
    {
        this.strResp = strResp;
        this.enumArg = enumArg;
        setOptStrResp(optStrResp);
        setOptEnumArg(optEnumArg);
    }

    public String strResp;

    public EEnum enumArg;

    private String optStrResp;
    private boolean _optStrResp;

    public String getOptStrResp()
    {
        if(!_optStrResp)
        {
            throw new java.util.NoSuchElementException("optStrResp is not set");
        }
        return optStrResp;
    }

    public void setOptStrResp(String optStrResp)
    {
        _optStrResp = true;
        this.optStrResp = optStrResp;
    }

    public boolean hasOptStrResp()
    {
        return _optStrResp;
    }

    public void clearOptStrResp()
    {
        _optStrResp = false;
    }

    public void optionalOptStrResp(java.util.Optional<java.lang.String> v)
    {
        if(v == null || !v.isPresent())
        {
            _optStrResp = false;
        }
        else
        {
            _optStrResp = true;
            optStrResp = v.get();
        }
    }

    public java.util.Optional<java.lang.String> optionalOptStrResp()
    {
        if(_optStrResp)
        {
            return java.util.Optional.of(optStrResp);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private EEnum optEnumArg;
    private boolean _optEnumArg;

    public EEnum getOptEnumArg()
    {
        if(!_optEnumArg)
        {
            throw new java.util.NoSuchElementException("optEnumArg is not set");
        }
        return optEnumArg;
    }

    public void setOptEnumArg(EEnum optEnumArg)
    {
        _optEnumArg = true;
        this.optEnumArg = optEnumArg;
    }

    public boolean hasOptEnumArg()
    {
        return _optEnumArg;
    }

    public void clearOptEnumArg()
    {
        _optEnumArg = false;
    }

    public void optionalOptEnumArg(java.util.Optional<EEnum> v)
    {
        if(v == null || !v.isPresent())
        {
            _optEnumArg = false;
        }
        else
        {
            _optEnumArg = true;
            optEnumArg = v.get();
        }
    }

    public java.util.Optional<EEnum> optionalOptEnumArg()
    {
        if(_optEnumArg)
        {
            return java.util.Optional.of(optEnumArg);
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    public Response clone()
    {
        return (Response)super.clone();
    }

    public static String ice_staticId()
    {
        return "::ZadI4::Response";
    }

    @Override
    public String ice_id()
    {
        return ice_staticId();
    }

    /** @hidden */
    public static final long serialVersionUID = 3284750569635193707L;

    /** @hidden */
    @Override
    protected void _iceWriteImpl(com.zeroc.Ice.OutputStream ostr_)
    {
        ostr_.startSlice(ice_staticId(), -1, true);
        ostr_.writeString(strResp);
        EEnum.ice_write(ostr_, enumArg);
        if(_optStrResp)
        {
            ostr_.writeString(3, optStrResp);
        }
        if(_optEnumArg)
        {
            EEnum.ice_write(ostr_, 4, optEnumArg);
        }
        ostr_.endSlice();
    }

    /** @hidden */
    @Override
    protected void _iceReadImpl(com.zeroc.Ice.InputStream istr_)
    {
        istr_.startSlice();
        strResp = istr_.readString();
        enumArg = EEnum.ice_read(istr_);
        if(_optStrResp = istr_.readOptional(3, com.zeroc.Ice.OptionalFormat.VSize))
        {
            optStrResp = istr_.readString();
        }
        if(_optEnumArg = istr_.readOptional(4, com.zeroc.Ice.OptionalFormat.Size))
        {
            optEnumArg = EEnum.ice_read(istr_);
        }
        istr_.endSlice();
    }
}
