# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.9
#
# <auto-generated>
#
# Generated from file `zadi4.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module ZadI4
_M_ZadI4 = Ice.openModule('ZadI4')
__name__ = 'ZadI4'

if 'Person' not in _M_ZadI4.__dict__:
    _M_ZadI4.Person = Ice.createTempClass()
    class Person(Ice.Value):
        def __init__(self, firstName='', middleName=Ice.Unset, lastName='', birthDate=Ice.Unset):
            self.firstName = firstName
            self.middleName = middleName
            self.lastName = lastName
            self.birthDate = birthDate

        def ice_id(self):
            return '::ZadI4::Person'

        @staticmethod
        def ice_staticId():
            return '::ZadI4::Person'

        def __str__(self):
            return IcePy.stringify(self, _M_ZadI4._t_Person)

        __repr__ = __str__

    _M_ZadI4._t_Person = IcePy.defineValue('::ZadI4::Person', Person, -1, (), False, False, None, (
        ('firstName', (), IcePy._t_string, False, 0),
        ('middleName', (), IcePy._t_string, True, 2),
        ('lastName', (), IcePy._t_string, False, 0),
        ('birthDate', (), IcePy._t_int, True, 1)
    ))
    Person._ice_type = _M_ZadI4._t_Person

    _M_ZadI4.Person = Person
    del Person

if 'NoInput' not in _M_ZadI4.__dict__:
    _M_ZadI4.NoInput = Ice.createTempClass()
    class NoInput(Ice.UserException):
        def __init__(self):
            pass

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_id = '::ZadI4::NoInput'

    _M_ZadI4._t_NoInput = IcePy.defineException('::ZadI4::NoInput', NoInput, (), False, None, ())
    NoInput._ice_type = _M_ZadI4._t_NoInput

    _M_ZadI4.NoInput = NoInput
    del NoInput

_M_ZadI4._t_TestingService = IcePy.defineValue('::ZadI4::TestingService', Ice.Value, -1, (), False, True, None, ())

if 'TestingServicePrx' not in _M_ZadI4.__dict__:
    _M_ZadI4.TestingServicePrx = Ice.createTempClass()
    class TestingServicePrx(Ice.ObjectPrx):

        def TestingOperation(self, person, context=None):
            return _M_ZadI4.TestingService._op_TestingOperation.invoke(self, ((person, ), context))

        def TestingOperationAsync(self, person, context=None):
            return _M_ZadI4.TestingService._op_TestingOperation.invokeAsync(self, ((person, ), context))

        def begin_TestingOperation(self, person, _response=None, _ex=None, _sent=None, context=None):
            return _M_ZadI4.TestingService._op_TestingOperation.begin(self, ((person, ), _response, _ex, _sent, context))

        def end_TestingOperation(self, _r):
            return _M_ZadI4.TestingService._op_TestingOperation.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_ZadI4.TestingServicePrx.ice_checkedCast(proxy, '::ZadI4::TestingService', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_ZadI4.TestingServicePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::ZadI4::TestingService'
    _M_ZadI4._t_TestingServicePrx = IcePy.defineProxy('::ZadI4::TestingService', TestingServicePrx)

    _M_ZadI4.TestingServicePrx = TestingServicePrx
    del TestingServicePrx

    _M_ZadI4.TestingService = Ice.createTempClass()
    class TestingService(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::ZadI4::TestingService')

        def ice_id(self, current=None):
            return '::ZadI4::TestingService'

        @staticmethod
        def ice_staticId():
            return '::ZadI4::TestingService'

        def TestingOperation(self, person, current=None):
            raise NotImplementedError("servant method 'TestingOperation' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_ZadI4._t_TestingServiceDisp)

        __repr__ = __str__

    _M_ZadI4._t_TestingServiceDisp = IcePy.defineClass('::ZadI4::TestingService', TestingService, (), None, ())
    TestingService._ice_type = _M_ZadI4._t_TestingServiceDisp

    TestingService._op_TestingOperation = IcePy.Operation('TestingOperation', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), _M_ZadI4._t_Person, False, 0),), (), None, ())

    _M_ZadI4.TestingService = TestingService
    del TestingService

# End of module ZadI4
